// The Sacalon Parser
//
// Copyright (c) 2019-2022 Sacalon Foundation
// all rights reserved.

use conv
use token

struct Node {
    var node_type : string?
    var children : [Node]
    var token_start : Token?
}

struct Expr {
    var left : Node?
    var operator : Token?
    var right : Node?
}

function parser_abort(filename:string,msg:string,type:string,line:int){
    error(format("{}: Expected '{}'', got '{}' instead:{}\n",filename,msg,type,to_string(line)))
    exit(1)
}

function parser_abort_msg(filename:string,msg:string,line:int){
    error(format("{}: Expected '{}':{}\n",filename,msg,to_string(line)))
    exit(1)
}

function parser(filename:string,tokens:[Token]): Node {
    var program : Node = Node("program",[],tokens[0])
    // todo
    return program
}